<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-16T17:17:37 EDT" name="Suite" finished-at="2022-10-16T17:17:37 EDT" duration-ms="61">
    <groups>
      <group name="important">
        <method signature="Testing2.Test5()[pri:0, instance:tests.Testing2@2c35e847]" name="Test5" class="tests.Testing2"/>
      </group> <!-- important -->
      <group name="smoke">
        <method signature="Testing3.createUser()[pri:1, instance:tests.Testing3@1b2abca6]" name="createUser" class="tests.Testing3"/>
        <method signature="Testing1.test1()[pri:0, instance:tests.Testing1@18d87d80]" name="test1" class="tests.Testing1"/>
        <method signature="Testing2.Test4()[pri:0, instance:tests.Testing2@2c35e847]" name="Test4" class="tests.Testing2"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="Testing3.createUser()[pri:1, instance:tests.Testing3@1b2abca6]" name="createUser" class="tests.Testing3"/>
        <method signature="Testing1.test2()[pri:0, instance:tests.Testing1@18d87d80]" name="test2" class="tests.Testing1"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2022-10-16T17:17:37 EDT" name="Test" finished-at="2022-10-16T17:17:37 EDT" duration-ms="61">
      <class name="tests.Testing3">
        <test-method signature="createUser()[pri:1, instance:tests.Testing3@1b2abca6]" started-at="2022-10-16T17:17:37 EDT" name="createUser" finished-at="2022-10-16T17:17:37 EDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method signature="editUser()[pri:2, instance:tests.Testing3@1b2abca6]" started-at="2022-10-16T17:17:37 EDT" name="editUser" finished-at="2022-10-16T17:17:37 EDT" depends-on-methods="tests.Testing3.createUser" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Verifying Element expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Verifying Element expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at tests.Testing3.editUser(Testing3.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editUser -->
        <test-method signature="deleteUser()[pri:3, instance:tests.Testing3@1b2abca6]" started-at="2022-10-16T17:17:37 EDT" name="deleteUser" finished-at="2022-10-16T17:17:37 EDT" depends-on-methods="tests.Testing3.editUser" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method tests.Testing3.deleteUser() on instance tests.Testing3@1b2abca6 depends on not successfully finished methods 
[tests.Testing3.editUser() on instance tests.Testing3@1b2abca6]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method tests.Testing3.deleteUser() on instance tests.Testing3@1b2abca6 depends on not successfully finished methods 
[tests.Testing3.editUser() on instance tests.Testing3@1b2abca6]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:150)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- tests.Testing3 -->
      <class name="tests.Testing1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="beforeSuite" finished-at="2022-10-16T17:17:37 EDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="beforeTest" finished-at="2022-10-16T17:17:37 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="beforeClass" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="beforeMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="f(java.lang.Integer,java.lang.String)[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="f" data-provider="dp" finished-at="2022-10-16T17:17:37 EDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method signature="f(java.lang.Integer,java.lang.String)[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="f" data-provider="dp" finished-at="2022-10-16T17:17:37 EDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="beforeMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="afterMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="afterMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test1()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="test1" finished-at="2022-10-16T17:17:37 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="beforeMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="afterMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test2()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="test2" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="beforeMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="afterMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test3()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="test3" finished-at="2022-10-16T17:17:37 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="beforeMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="afterMethod" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="afterClass" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="afterTest" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.Testing1@18d87d80]" started-at="2022-10-16T17:17:37 EDT" name="afterSuite" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.Testing1 -->
      <class name="tests.Testing2">
        <test-method signature="Test4()[pri:0, instance:tests.Testing2@2c35e847]" started-at="2022-10-16T17:17:37 EDT" name="Test4" finished-at="2022-10-16T17:17:37 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
        <test-method signature="Test5()[pri:0, instance:tests.Testing2@2c35e847]" started-at="2022-10-16T17:17:37 EDT" name="Test5" finished-at="2022-10-16T17:17:37 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test5 -->
      </class> <!-- tests.Testing2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
